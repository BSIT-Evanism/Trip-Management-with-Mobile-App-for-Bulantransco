---
type Conductor = {
  id: string;
  name: string;
  relatedTrips: { tripStatus: "not_started" | "in_progress" | "completed" }[];
};

type Location = {
  id: string;
  name: string;
};

type Inspector = {
  id: string;
  name: string;
  relatedTrips: { tripStatus: "not_started" | "in_progress" | "completed" }[];
};

type Trip = {
  id: string;
  relatedDestination: { name: string } | null;
  currentPassengers: number;
  relatedConductor: { name: string } | null;
  relatedInspector: { name: string } | null;
  startDate: string;
  endDate: string;
  totalPassengers: number;
  tripStatus: "not_started" | "in_progress" | "completed";
};

import { AddLocationsComponent } from "@/components/AddLocationsComponent";
import { AddTripsComponent } from "@/components/AddTripsComponent";
import { ConductorsInspectorsComp } from "@/components/ConductorsInspectorsComp";
import Layout from "@/layouts/Layout.astro";
import { fetchClient } from "@/lib/client";
import { actions } from "astro:actions";

if (Astro.locals.role !== "manager") {
  return Astro.redirect("/");
}

const [conductors, locations, inspectors, trips] = (await Promise.all([
  fetchClient
    .get("/manager/conductors")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
  fetchClient
    .get("/manager/locations")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
  fetchClient
    .get("/manager/inspectors")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
  fetchClient
    .get("/manager/trips")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
])) as [Conductor[], Location[], Inspector[], Trip[]];
---

<Layout title="Manager">
  <h1
    class="scroll-m-20 text-4xl p-2 font-extrabold tracking-tight lg:text-3xl"
    transition:name="role"
  >
    Manager
  </h1>

  <div class="grid gap-6 p-6">
    <!-- First row: Trips form and Routes -->
    <div class="grid grid-cols-2 gap-6">
      <div class="border-4 border-black bg-white p-6">
        <h2
          class="text-3xl font-bold uppercase border-b-4 border-black pb-2 mb-4"
        >
          Add Trip
        </h2>
        <AddTripsComponent
          locations={locations}
          conductors={conductors}
          inspectors={inspectors}
          client:only="react"
        />
      </div>

      <div class="border-4 border-black bg-white p-6">
        <h2 class="text-3xl font-bold uppercase border-b-4 border-black pb-2">
          Routes
        </h2>
        <div class="mt-4">
          <div class="border-2 border-black p-4 bg-gray-100">
            <div class="max-h-[250px] overflow-y-auto">
              <table class="w-full border-4 border-black">
                <thead>
                  <tr>
                    <th
                      class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                      >ID</th
                    >
                    <th
                      class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                      >NAME</th
                    >
                    <th
                      class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                      >Delete</th
                    >
                  </tr>
                </thead>
                <tbody>
                  {
                    locations.map((location) => (
                      <tr>
                        <td class="border-2 border-black px-4 py-2 font-mono">
                          {location.id}
                        </td>
                        <td class="border-2 border-black px-4 py-2 font-mono">
                          {location.name}
                        </td>
                        <td class="border-2 border-black px-4 py-2 font-mono">
                          <form method="POST" action={actions.deleteLocation}>
                            <input
                              type="hidden"
                              name="id"
                              value={location.id}
                            />
                            <button
                              class="bg-red-500 text-white px-4 py-2"
                              type="submit"
                            >
                              Delete
                            </button>
                          </form>
                        </td>
                      </tr>
                    ))
                  }
                </tbody>
              </table>
            </div>
            <AddLocationsComponent client:only="react" />
          </div>
        </div>
      </div>
    </div>

    <!-- Second row: Personnel -->
    <div class="border-4 border-black bg-white p-6">
      <h2
        class="text-3xl font-bold uppercase border-b-4 border-black pb-2 mb-4"
      >
        Personnel
      </h2>
      <ConductorsInspectorsComp
        conductors={conductors}
        inspectors={inspectors}
        client:only="react"
      />
    </div>

    <!-- Third row: Trips table -->
    <div class="border-4 border-black bg-white p-6">
      <h2 class="text-3xl font-bold uppercase border-b-4 border-black pb-2">
        Trips
      </h2>
      <div class="mt-4">
        <div class="border-2 border-black p-4 bg-gray-100">
          <div class="max-h-[250px] overflow-y-auto">
            <table class="w-full border-4 border-black">
              <thead>
                <tr>
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >ID</th
                  >
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >Conductor</th
                  >
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >Inspector</th
                  >
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >Start Date</th
                  >
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >End Date</th
                  >
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >Passengers</th
                  >
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >Completed</th
                  >
                  <th
                    class="border-2 border-black px-4 py-2 text-left font-mono bg-gray-100"
                    >Destination</th
                  >
                </tr>
              </thead>
              <tbody>
                {
                  trips.map((trip) => (
                    <tr>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        <a href={`/manager/${trip.id}`}>{trip.id}</a>
                      </td>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        {trip.relatedConductor
                          ? trip.relatedConductor.name
                          : "None"}
                      </td>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        {trip.relatedInspector
                          ? trip.relatedInspector.name
                          : "None"}
                      </td>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        {trip.startDate}
                      </td>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        {trip.endDate}
                      </td>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        {trip.currentPassengers}/{trip.totalPassengers}
                      </td>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        {trip.tripStatus
                          .replace(/_/g, " ")
                          .replace(/\b\w/g, (c) => c.toUpperCase())}
                      </td>
                      <td class="border-2 border-black px-4 py-2 font-mono">
                        {trip.relatedDestination
                          ? trip.relatedDestination.name
                          : "None"}
                      </td>
                    </tr>
                  ))
                }
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
