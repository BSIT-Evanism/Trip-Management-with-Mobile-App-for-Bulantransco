---
type Conductor = {
  id: string;
  name: string;
  relatedTrips: { tripStatus: "not_started" | "in_progress" | "completed" }[];
};

type Location = {
  id: string;
  name: string;
};

type Inspector = {
  id: string;
  name: string;
  relatedTrips: { tripStatus: "not_started" | "in_progress" | "completed" }[];
};

type Trip = {
  id: string;
  relatedDestination: { name: string } | null;
  currentPassengers: number;
  relatedConductor: { name: string } | null;
  relatedInspector: { name: string } | null;
  startDate: string;
  endDate: string;
  totalPassengers: number;
  tripStatus: "not_started" | "in_progress" | "completed";
};

import { AddLocationsComponent } from "@/components/AddLocationsComponent";
import { AddTripsComponent } from "@/components/AddTripsComponent";
import { ConductorsInspectorsComp } from "@/components/ConductorsInspectorsComp";
import Layout from "@/layouts/Layout.astro";
import { fetchClient } from "@/lib/client";
import { actions } from "astro:actions";

if (Astro.locals.role !== "manager") {
  return Astro.redirect("/");
}

const [conductors, locations, inspectors, trips] = (await Promise.all([
  fetchClient
    .get("/manager/conductors")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
  fetchClient
    .get("/manager/locations")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
  fetchClient
    .get("/manager/inspectors")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
  fetchClient
    .get("/manager/trips")
    .then(({ data }) => data)
    .catch((error) => {
      console.error(error);
      return [];
    }),
])) as [Conductor[], Location[], Inspector[], Trip[]];
---

<Layout title="Manager">
  <div class="min-h-screen max-w-full bg-gray-50">
    <div class="max-w-[1920px] mx-auto">
      <header class="bg-white mb-2">
        <h1 class="text-3xl p-3 font-bold tracking-tight text-gray-900" transition:name="role">
          Dashboard
        </h1>
      </header>

      <div class="grid gap-4 p-3 md:p-4">
        <!-- First row: Trips form and Routes -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div class="bg-white rounded-lg shadow-lg overflow-hidden">
            <div class="bg-gradient-to-l from-cyan-600 to-blue-700 hover:from-cyan-700 hover:to-blue-800 transition-all duration-300 p-2">
              <h2 class="text-2xl font-bold text-white">
                ADD TRIP
              </h2>
            </div>
            <div class="p-6">
              <AddTripsComponent
                locations={locations}
                conductors={conductors}
                inspectors={inspectors}
                client:only="react"
              />
            </div>
          </div>

          <div class="bg-white rounded-lg shadow-lg overflow-hidden">
            <div class="bg-gradient-to-l from-cyan-600 to-blue-700 hover:from-cyan-700 hover:to-blue-800 transition-all duration-300 p-2">
              <h2 class="text-2xl font-bold text-white">
                ROUTES
              </h2>
            </div>
            <div class="p-6">
              <!-- Add New Route Section -->
              <div class="flex justify-end mb-4">
                <AddLocationsComponent client:only="react" />
              </div>
              <div class="bg-white rounded-lg border-[3px] border-gray-200">
                <div class="max-h-[300px] overflow-y-auto">
                  <table class="w-full">
                    <thead class="bg-teal-50">
                      <tr>
                        <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider">ID</th>
                        <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider">Name</th>
                        <th class="border-b-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider">Actions</th>
                      </tr>
                    </thead>
                    <tbody class="divide-y-[3px] divide-gray-200">
                      {locations.map((location) => (
                        <tr class="hover:bg-gray-50">
                          <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900">{location.id}</td>
                          <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900">{location.name}</td>
                          <td class="px-4 py-3 text-sm">
                            <span class="text-red-600 hover:text-red-800 cursor-pointer hover:underline">
                              Delete
                            </span>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Second row: Personnel -->
        <div class="bg-gradient-to-l from-cyan-600 to-blue-700 hover:from-cyan-700 hover:to-blue-800 transition-all duration-300 p-2 rounded-t-lg">
          <h2 class="text-2xl font-bold text-white">
            PERSONNEL
          </h2>
        </div>
        <div class="p-6 bg-white rounded-b-lg shadow-lg">
          <div class="bg-white rounded-lg border-[3px] border-gray-200">
            <div class="max-h-[400px] overflow-y-auto">
              <table class="w-full table-fixed">
                <thead class="bg-teal-50 sticky top-0 z-10">
                  <tr>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[35%]">ID</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[35%]">Name</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[15%]">Status</th>
                    <th class="border-b-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[15%]">Options</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y-[3px] divide-gray-200">
                  {conductors.map((conductor) => (
                    <tr class="hover:bg-gray-50 transition-colors duration-150">
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm">
                        <a href={`/manager/conductor/${conductor.id}`} class="text-blue-600 hover:text-blue-800 hover:underline">
                          {conductor.id}
                        </a>
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900">
                        {conductor.name}
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm">
                        {conductor.relatedTrips.some(trip => trip.tripStatus === "in_progress") ? (
                          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                            On Trip
                          </span>
                        ) : (
                          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                            Available
                          </span>
                        )}
                      </td>
                      <td class="px-4 py-3 text-sm">
                        <span class="text-red-600 hover:text-red-800 cursor-pointer hover:underline">
                          Delete
                        </span>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Third row: Trips table -->
        <div class="bg-gradient-to-l from-cyan-600 to-blue-700 hover:from-cyan-700 hover:to-blue-800 transition-all duration-300 p-2 rounded-t-lg">
          <h2 class="text-2xl font-bold text-white">
            TRIPS
          </h2>
        </div>
        <div class="p-6 bg-white rounded-b-lg shadow-lg">
          <div class="bg-white rounded-lg border-[3px] border-gray-200">
            <div class="max-h-[400px] overflow-y-auto">
              <table class="w-full table-fixed">
                <thead class="bg-teal-50 sticky top-0 z-10">
                  <tr>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[15%]">ID</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[25%]">Conductor</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[25%]">Inspector</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[15%]">Start Date</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[15%]">End Date</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[12%]">Passengers</th>
                    <th class="border-b-[3px] border-r-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[13%]">Status</th>
                    <th class="border-b-[3px] border-gray-200 px-4 py-3 text-left text-xs font-medium text-teal-700 uppercase tracking-wider w-[20%]">Destination</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y-[3px] divide-gray-200">
                  {trips.map((trip) => (
                    <tr class="hover:bg-gray-50">
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm">
                        <a href={`/manager/${trip.id}`} class="text-blue-600 hover:text-blue-800 hover:underline">{trip.id}</a>
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900 truncate">
                        {trip.relatedConductor ? trip.relatedConductor.name : "None"}
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900 truncate">
                        {trip.relatedInspector ? trip.relatedInspector.name : "None"}
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900 truncate">
                        {trip.startDate}
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900 truncate">
                        {trip.endDate}
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm text-gray-900">
                        {trip.currentPassengers}/{trip.totalPassengers}
                      </td>
                      <td class="border-r-[3px] border-gray-200 px-4 py-3 text-sm">
                        <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                          ${trip.tripStatus === 'completed' ? 'bg-green-100 text-green-800' : 
                            trip.tripStatus === 'in_progress' ? 'bg-blue-100 text-blue-800' : 
                            'bg-gray-100 text-gray-800'}`}>
                          {trip.tripStatus.replace(/_/g, " ").replace(/\b\w/g, (c) => c.toUpperCase())}
                        </span>
                      </td>
                      <td class="px-4 py-3 text-sm text-gray-900 truncate">
                        {trip.relatedDestination ? trip.relatedDestination.name : "None"}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
