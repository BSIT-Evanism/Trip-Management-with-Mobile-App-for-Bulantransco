{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\components\\\\AssignRoles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignRoles = () => {\n  _s();\n  const [conductors, setConductors] = useState([]);\n  const [inspectors, setInspectors] = useState([]);\n  useEffect(() => {\n    // Simulate fetching data from a backend API\n    const mockConductors = [{\n      id: 1,\n      name: 'Conductor A'\n    }, {\n      id: 2,\n      name: 'Conductor B'\n    }, {\n      id: 3,\n      name: 'Conductor C'\n    }];\n    const mockInspectors = [{\n      id: 1,\n      name: 'Inspector X'\n    }, {\n      id: 2,\n      name: 'Inspector Y'\n    }, {\n      id: 3,\n      name: 'Inspector Z'\n    }];\n\n    // Set the data to state\n    setConductors(mockConductors);\n    setInspectors(mockInspectors);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assign Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Conductor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: conductor.id,\n          children: conductor.name\n        }, conductor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Inspector:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: inspectors.map(inspector => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: inspector.id,\n          children: inspector.name\n        }, inspector.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignRoles, \"pjCvcgoB/P3yBaV6YCxSrLHTyMo=\");\n_c = AssignRoles;\nexport default AssignRoles;\nvar _c;\n$RefreshReg$(_c, \"AssignRoles\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AssignRoles","_s","conductors","setConductors","inspectors","setInspectors","mockConductors","id","name","mockInspectors","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conductor","value","inspector","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/components/AssignRoles.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AssignRoles = () => {\r\n  const [conductors, setConductors] = useState([]);\r\n  const [inspectors, setInspectors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching data from a backend API\r\n    const mockConductors = [\r\n      { id: 1, name: 'Conductor A' },\r\n      { id: 2, name: 'Conductor B' },\r\n      { id: 3, name: 'Conductor C' },\r\n    ];\r\n\r\n    const mockInspectors = [\r\n      { id: 1, name: 'Inspector X' },\r\n      { id: 2, name: 'Inspector Y' },\r\n      { id: 3, name: 'Inspector Z' },\r\n    ];\r\n\r\n    // Set the data to state\r\n    setConductors(mockConductors);\r\n    setInspectors(mockInspectors);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Assign Roles</h1>\r\n      <div>\r\n        <label>Conductor:</label>\r\n        <select>\r\n          {conductors.map(conductor => (\r\n            <option key={conductor.id} value={conductor.id}>\r\n              {conductor.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>Inspector:</label>\r\n        <select>\r\n          {inspectors.map(inspector => (\r\n            <option key={inspector.id} value={inspector.id}>\r\n              {inspector.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignRoles;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,cAAc,GAAG,CACrB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,EAC9B;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,EAC9B;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,CAC/B;IAED,MAAMC,cAAc,GAAG,CACrB;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,EAC9B;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,EAC9B;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,CAC/B;;IAED;IACAL,aAAa,CAACG,cAAc,CAAC;IAC7BD,aAAa,CAACI,cAAc,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBf,OAAA;QAAAW,QAAA,EACGR,UAAU,CAACa,GAAG,CAACC,SAAS,iBACvBjB,OAAA;UAA2BkB,KAAK,EAAED,SAAS,CAACT,EAAG;UAAAG,QAAA,EAC5CM,SAAS,CAACR;QAAI,GADJQ,SAAS,CAACT,EAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBf,OAAA;QAAAW,QAAA,EACGN,UAAU,CAACW,GAAG,CAACG,SAAS,iBACvBnB,OAAA;UAA2BkB,KAAK,EAAEC,SAAS,CAACX,EAAG;UAAAG,QAAA,EAC5CQ,SAAS,CAACV;QAAI,GADJU,SAAS,CAACX,EAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAhDID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}