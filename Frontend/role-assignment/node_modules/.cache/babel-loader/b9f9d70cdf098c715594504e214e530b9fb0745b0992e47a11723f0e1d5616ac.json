{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\ConductorsAndInspectors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConductorsAndInspectors = () => {\n  _s();\n  const [conductors, setConductors] = useState([]);\n  const [newConductorName, setNewConductorName] = useState('');\n  const [updateConductorId, setUpdateConductorId] = useState('');\n  const [updateConductorName, setUpdateConductorName] = useState('');\n  useEffect(() => {\n    // If no data in localStorage, set default conductors\n    if (!localStorage.getItem('conductors')) {\n      const defaultConductors = [{\n        id: 1,\n        name: 'Conductor A'\n      }, {\n        id: 2,\n        name: 'Conductor B'\n      }];\n      localStorage.setItem('conductors', JSON.stringify(defaultConductors));\n    }\n\n    // Fetch data from localStorage\n    setConductors(JSON.parse(localStorage.getItem('conductors')));\n  }, []);\n  const handleAddConductor = () => {\n    const conductors = JSON.parse(localStorage.getItem('conductors')) || [];\n    const newId = conductors.length ? conductors[conductors.length - 1].id + 1 : 1;\n    const newConductor = {\n      id: newId,\n      name: newConductorName\n    };\n    conductors.push(newConductor);\n    localStorage.setItem('conductors', JSON.stringify(conductors));\n    setConductors(conductors);\n    setNewConductorName('');\n  };\n  const handleUpdateConductor = () => {\n    const updatedConductors = conductors.map(conductor => {\n      if (conductor.id === parseInt(updateConductorId)) {\n        return {\n          ...conductor,\n          name: updateConductorName\n        };\n      }\n      return conductor;\n    });\n    localStorage.setItem('conductors', JSON.stringify(updatedConductors));\n    setConductors(updatedConductors);\n    setUpdateConductorId('');\n    setUpdateConductorName('');\n  };\n  const handleDeleteConductor = id => {\n    const filteredConductors = conductors.filter(conductor => conductor.id !== id);\n    localStorage.setItem('conductors', JSON.stringify(filteredConductors));\n    setConductors(filteredConductors);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conductors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Conductor Name\",\n      value: newConductorName,\n      onChange: e => setNewConductorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddConductor,\n      children: \"Add Conductor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Conductor ID to update\",\n      value: updateConductorId,\n      onChange: e => setUpdateConductorId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New Conductor Name\",\n      value: updateConductorName,\n      onChange: e => setUpdateConductorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateConductor,\n      children: \"Update Conductor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [conductor.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteConductor(conductor.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, conductor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ConductorsAndInspectors, \"UlWqddx1uNo1IUspj76ZLnlU5Qs=\");\n_c = ConductorsAndInspectors;\nexport default ConductorsAndInspectors;\nvar _c;\n$RefreshReg$(_c, \"ConductorsAndInspectors\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ConductorsAndInspectors","_s","conductors","setConductors","newConductorName","setNewConductorName","updateConductorId","setUpdateConductorId","updateConductorName","setUpdateConductorName","localStorage","getItem","defaultConductors","id","name","setItem","JSON","stringify","parse","handleAddConductor","newId","length","newConductor","push","handleUpdateConductor","updatedConductors","map","conductor","parseInt","handleDeleteConductor","filteredConductors","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/ConductorsAndInspectors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ConductorsAndInspectors = () => {\r\n  const [conductors, setConductors] = useState([]);\r\n  const [newConductorName, setNewConductorName] = useState('');\r\n  const [updateConductorId, setUpdateConductorId] = useState('');\r\n  const [updateConductorName, setUpdateConductorName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // If no data in localStorage, set default conductors\r\n    if (!localStorage.getItem('conductors')) {\r\n      const defaultConductors = [\r\n        { id: 1, name: 'Conductor A' },\r\n        { id: 2, name: 'Conductor B' },\r\n      ];\r\n      localStorage.setItem('conductors', JSON.stringify(defaultConductors));\r\n    }\r\n\r\n    // Fetch data from localStorage\r\n    setConductors(JSON.parse(localStorage.getItem('conductors')));\r\n  }, []);\r\n\r\n  const handleAddConductor = () => {\r\n    const conductors = JSON.parse(localStorage.getItem('conductors')) || [];\r\n    const newId = conductors.length ? conductors[conductors.length - 1].id + 1 : 1;\r\n    const newConductor = { id: newId, name: newConductorName };\r\n    conductors.push(newConductor);\r\n    localStorage.setItem('conductors', JSON.stringify(conductors));\r\n    setConductors(conductors);\r\n    setNewConductorName('');\r\n  };\r\n\r\n  const handleUpdateConductor = () => {\r\n    const updatedConductors = conductors.map(conductor => {\r\n      if (conductor.id === parseInt(updateConductorId)) {\r\n        return { ...conductor, name: updateConductorName };\r\n      }\r\n      return conductor;\r\n    });\r\n    localStorage.setItem('conductors', JSON.stringify(updatedConductors));\r\n    setConductors(updatedConductors);\r\n    setUpdateConductorId('');\r\n    setUpdateConductorName('');\r\n  };\r\n\r\n  const handleDeleteConductor = (id) => {\r\n    const filteredConductors = conductors.filter(conductor => conductor.id !== id);\r\n    localStorage.setItem('conductors', JSON.stringify(filteredConductors));\r\n    setConductors(filteredConductors);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Conductors</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Conductor Name\"\r\n        value={newConductorName}\r\n        onChange={(e) => setNewConductorName(e.target.value)}\r\n      />\r\n      <button onClick={handleAddConductor}>Add Conductor</button>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Conductor ID to update\"\r\n        value={updateConductorId}\r\n        onChange={(e) => setUpdateConductorId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"New Conductor Name\"\r\n        value={updateConductorName}\r\n        onChange={(e) => setUpdateConductorName(e.target.value)}\r\n      />\r\n      <button onClick={handleUpdateConductor}>Update Conductor</button>\r\n\r\n      <ul>\r\n        {conductors.map((conductor) => (\r\n          <li key={conductor.id}>\r\n            {conductor.name}\r\n            <button onClick={() => handleDeleteConductor(conductor.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConductorsAndInspectors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}