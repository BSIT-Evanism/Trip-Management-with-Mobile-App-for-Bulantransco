{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\ConductorsAndInspectors.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConductorsAndInspectors = () => {\n  _s();\n  const [conductors, setConductors] = useState([{\n    id: 1,\n    name: 'Conductor A'\n  }, {\n    id: 2,\n    name: 'Conductor B'\n  }]);\n  const [newConductor, setNewConductor] = useState('');\n  const addConductor = () => {\n    const newId = conductors.length + 1;\n    const newConductorData = {\n      id: newId,\n      name: newConductor\n    };\n    setConductors([...conductors, newConductorData]);\n  };\n  const updateConductor = (id, newName) => {\n    setConductors(conductors.map(c => c.id === id ? {\n      ...c,\n      name: newName\n    } : c));\n  };\n  const deleteConductor = id => {\n    setConductors(conductors.filter(c => c.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conductors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [conductor.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateConductor(conductor.id, 'Updated Conductor Name'),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteConductor(conductor.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, conductor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newConductor,\n      onChange: e => setNewConductor(e.target.value),\n      placeholder: \"Enter Conductor Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addConductor,\n      children: \"Add Conductor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ConductorsAndInspectors, \"btw3kdZ6LjbKSIgmuapS1kAEl6A=\");\n_c = ConductorsAndInspectors;\nexport default ConductorsAndInspectors;\nvar _c;\n$RefreshReg$(_c, \"ConductorsAndInspectors\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConductorsAndInspectors","_s","conductors","setConductors","id","name","newConductor","setNewConductor","addConductor","newId","length","newConductorData","updateConductor","newName","map","c","deleteConductor","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","conductor","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/ConductorsAndInspectors.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ConductorsAndInspectors = () => {\r\n  const [conductors, setConductors] = useState([\r\n    { id: 1, name: 'Conductor A' },\r\n    { id: 2, name: 'Conductor B' },\r\n  ]);\r\n\r\n  const [newConductor, setNewConductor] = useState('');\r\n\r\n  const addConductor = () => {\r\n    const newId = conductors.length + 1;\r\n    const newConductorData = { id: newId, name: newConductor };\r\n    setConductors([...conductors, newConductorData]);\r\n  };\r\n\r\n  const updateConductor = (id, newName) => {\r\n    setConductors(conductors.map((c) => (c.id === id ? { ...c, name: newName } : c)));\r\n  };\r\n\r\n  const deleteConductor = (id) => {\r\n    setConductors(conductors.filter((c) => c.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Conductors</h1>\r\n      <ul>\r\n        {conductors.map((conductor) => (\r\n          <li key={conductor.id}>\r\n            {conductor.name} \r\n            <button onClick={() => updateConductor(conductor.id, 'Updated Conductor Name')}>Update</button>\r\n            <button onClick={() => deleteConductor(conductor.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={newConductor}\r\n        onChange={(e) => setNewConductor(e.target.value)}\r\n        placeholder=\"Enter Conductor Name\"\r\n      />\r\n      <button onClick={addConductor}>Add Conductor</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConductorsAndInspectors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}