{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\ConductorsAndInspectors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conductors = () => {\n  _s();\n  const [conductors, setConductors] = useState([]);\n  const [newConductor, setNewConductor] = useState('');\n\n  // Fetch existing conductors on load (GET)\n  useEffect(() => {\n    fetch('http://localhost:5000/conductors').then(response => response.json()).then(data => setConductors(data)).catch(error => console.error('Error fetching conductors:', error));\n  }, []);\n\n  // Function to add a new conductor (POST)\n  const handleAddConductor = () => {\n    fetch('http://localhost:5000/conductors', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: conductors.length + 1,\n        name: newConductor\n      })\n    }).then(response => response.json()).then(data => setConductors([...conductors, data])).catch(error => console.error('Error adding conductor:', error));\n  };\n\n  // Function to update a conductor (PUT)\n  const handleUpdateConductor = (id, updatedName) => {\n    fetch(`http://localhost:5000/conductors/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: updatedName\n      })\n    }).then(response => response.json()).then(() => {\n      setConductors(conductors.map(conductor => conductor.id === id ? {\n        ...conductor,\n        name: updatedName\n      } : conductor));\n    }).catch(error => console.error('Error updating conductor:', error));\n  };\n\n  // Function to delete a conductor (DELETE)\n  const handleDeleteConductor = id => {\n    fetch(`http://localhost:5000/conductors/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setConductors(conductors.filter(conductor => conductor.id !== id));\n    }).catch(error => console.error('Error deleting conductor:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conductors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newConductor,\n      onChange: e => setNewConductor(e.target.value),\n      placeholder: \"Enter new conductor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddConductor,\n      children: \"Add Conductor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), conductors.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No conductors found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [conductor.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateConductor(conductor.id, prompt('New Name')),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteConductor(conductor.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, conductor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Conductors, \"p3cUedFhy2BHhbZxa5m2GChYbRg=\");\n_c = Conductors;\nexport default Conductors;\nvar _c;\n$RefreshReg$(_c, \"Conductors\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Conductors","_s","conductors","setConductors","newConductor","setNewConductor","fetch","then","response","json","data","catch","error","console","handleAddConductor","method","headers","body","JSON","stringify","id","length","name","handleUpdateConductor","updatedName","map","conductor","handleDeleteConductor","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","prompt","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/ConductorsAndInspectors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Conductors = () => {\r\n  const [conductors, setConductors] = useState([]);\r\n  const [newConductor, setNewConductor] = useState('');\r\n\r\n  // Fetch existing conductors on load (GET)\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/conductors')\r\n      .then(response => response.json())\r\n      .then(data => setConductors(data))\r\n      .catch(error => console.error('Error fetching conductors:', error));\r\n  }, []);\r\n\r\n  // Function to add a new conductor (POST)\r\n  const handleAddConductor = () => {\r\n    fetch('http://localhost:5000/conductors', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ id: conductors.length + 1, name: newConductor }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => setConductors([...conductors, data]))\r\n      .catch(error => console.error('Error adding conductor:', error));\r\n  };\r\n\r\n  // Function to update a conductor (PUT)\r\n  const handleUpdateConductor = (id, updatedName) => {\r\n    fetch(`http://localhost:5000/conductors/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name: updatedName }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(() => {\r\n        setConductors(\r\n          conductors.map(conductor =>\r\n            conductor.id === id ? { ...conductor, name: updatedName } : conductor\r\n          )\r\n        );\r\n      })\r\n      .catch(error => console.error('Error updating conductor:', error));\r\n  };\r\n\r\n  // Function to delete a conductor (DELETE)\r\n  const handleDeleteConductor = id => {\r\n    fetch(`http://localhost:5000/conductors/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then(() => {\r\n        setConductors(conductors.filter(conductor => conductor.id !== id));\r\n      })\r\n      .catch(error => console.error('Error deleting conductor:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Conductors</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newConductor}\r\n        onChange={e => setNewConductor(e.target.value)}\r\n        placeholder=\"Enter new conductor\"\r\n      />\r\n      <button onClick={handleAddConductor}>Add Conductor</button>\r\n\r\n      {conductors.length === 0 ? (\r\n        <p>No conductors found</p>\r\n      ) : (\r\n        <ul>\r\n          {conductors.map(conductor => (\r\n            <li key={conductor.id}>\r\n              {conductor.name}\r\n              <button onClick={() => handleUpdateConductor(conductor.id, prompt('New Name'))}>\r\n                Update\r\n              </button>\r\n              <button onClick={() => handleDeleteConductor(conductor.id)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conductors;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,aAAa,CAACO,IAAI,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BR,KAAK,CAAC,kCAAkC,EAAE;MACxCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,EAAE,EAAElB,UAAU,CAACmB,MAAM,GAAG,CAAC;QAAEC,IAAI,EAAElB;MAAa,CAAC;IACxE,CAAC,CAAC,CACCG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEQ,IAAI,CAAC,CAAC,CAAC,CAClDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC;;EAED;EACA,MAAMW,qBAAqB,GAAGA,CAACH,EAAE,EAAEI,WAAW,KAAK;IACjDlB,KAAK,CAAC,oCAAoCc,EAAE,EAAE,EAAE;MAC9CL,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEG,IAAI,EAAEE;MAAY,CAAC;IAC5C,CAAC,CAAC,CACCjB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC,MAAM;MACVJ,aAAa,CACXD,UAAU,CAACuB,GAAG,CAACC,SAAS,IACtBA,SAAS,CAACN,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGM,SAAS;QAAEJ,IAAI,EAAEE;MAAY,CAAC,GAAGE,SAC9D,CACF,CAAC;IACH,CAAC,CAAC,CACDf,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC;;EAED;EACA,MAAMe,qBAAqB,GAAGP,EAAE,IAAI;IAClCd,KAAK,CAAC,oCAAoCc,EAAE,EAAE,EAAE;MAC9CL,MAAM,EAAE;IACV,CAAC,CAAC,CACCR,IAAI,CAAC,MAAM;MACVJ,aAAa,CAACD,UAAU,CAAC0B,MAAM,CAACF,SAAS,IAAIA,SAAS,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;IACpE,CAAC,CAAC,CACDT,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC;EAED,oBACEb,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE/B,YAAa;MACpBgC,QAAQ,EAAEC,CAAC,IAAIhC,eAAe,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAqB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFlC,OAAA;MAAQyC,OAAO,EAAE1B,kBAAmB;MAAAe,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE1D/B,UAAU,CAACmB,MAAM,KAAK,CAAC,gBACtBtB,OAAA;MAAA8B,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1BlC,OAAA;MAAA8B,QAAA,EACG3B,UAAU,CAACuB,GAAG,CAACC,SAAS,iBACvB3B,OAAA;QAAA8B,QAAA,GACGH,SAAS,CAACJ,IAAI,eACfvB,OAAA;UAAQyC,OAAO,EAAEA,CAAA,KAAMjB,qBAAqB,CAACG,SAAS,CAACN,EAAE,EAAEqB,MAAM,CAAC,UAAU,CAAC,CAAE;UAAAZ,QAAA,EAAC;QAEhF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlC,OAAA;UAAQyC,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAACD,SAAS,CAACN,EAAE,CAAE;UAAAS,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALpEP,SAAS,CAACN,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CAjFID,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AAmFhB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}