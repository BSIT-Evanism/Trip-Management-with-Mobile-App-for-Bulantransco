{"ast":null,"code":"// This function should send a POST request to assign conductors and inspectors\nexport const assignConductorInspector = async (conductor_id, inspector_id) => {\n  const response = await fetch('http://localhost:5000/assignments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      conductor_id,\n      inspector_id\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Error assigning conductor and inspector');\n  }\n  return await response.json(); // Return the assigned data\n};","map":{"version":3,"names":["assignConductorInspector","conductor_id","inspector_id","response","fetch","method","headers","body","JSON","stringify","ok","Error","json"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/api.js"],"sourcesContent":["// This function should send a POST request to assign conductors and inspectors\r\nexport const assignConductorInspector = async (conductor_id, inspector_id) => {\r\n    const response = await fetch('http://localhost:5000/assignments', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        conductor_id,\r\n        inspector_id,\r\n      }),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error('Error assigning conductor and inspector');\r\n    }\r\n  \r\n    return await response.json(); // Return the assigned data\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,wBAAwB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,YAAY,KAAK;EAC1E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;IAChEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBR,YAAY;MACZC;IACF,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}