{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\ConductorsAndInspectors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConductorsAndInspectors = () => {\n  _s();\n  const [conductors, setConductors] = useState([]);\n  const [inspectors, setInspectors] = useState([]);\n  const [newConductorName, setNewConductorName] = useState('');\n  const [updateConductorId, setUpdateConductorId] = useState('');\n  const [updateConductorName, setUpdateConductorName] = useState('');\n  useEffect(() => {\n    // Fetch Conductors from the backend\n    fetch('http://localhost:5000/conductors').then(response => response.json()).then(data => setConductors(data));\n\n    // Fetch Inspectors from the backend\n    fetch('http://localhost:5000/inspectors').then(response => response.json()).then(data => setInspectors(data));\n  }, []);\n  const handleAddConductor = () => {\n    const newId = conductors.length ? conductors[conductors.length - 1].id + 1 : 1;\n    const newConductor = {\n      id: newId,\n      name: newConductorName\n    };\n    const updatedConductors = [...conductors, newConductor];\n\n    // Update local state and clear input field\n    setConductors(updatedConductors);\n    setNewConductorName('');\n\n    // Post new conductor to the backend\n    fetch('http://localhost:5000/conductors', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newConductor)\n    });\n  };\n  const handleUpdateConductor = () => {\n    const updatedConductors = conductors.map(conductor => {\n      if (conductor.id === parseInt(updateConductorId)) {\n        return {\n          ...conductor,\n          name: updateConductorName\n        };\n      }\n      return conductor;\n    });\n    setConductors(updatedConductors);\n    setUpdateConductorId('');\n    setUpdateConductorName('');\n\n    // Send updated conductor to the backend\n    fetch(`http://localhost:5000/conductors/${updateConductorId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: updateConductorName\n      })\n    });\n  };\n  const handleDeleteConductor = id => {\n    const filteredConductors = conductors.filter(conductor => conductor.id !== id);\n    setConductors(filteredConductors);\n\n    // Send delete request to the backend\n    fetch(`http://localhost:5000/conductors/${id}`, {\n      method: 'DELETE'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assign Conductors and Inspectors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Assign Conductor: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: conductor.name,\n        children: conductor.name\n      }, conductor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Assign Inspector: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: inspectors.map(inspector => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: inspector.name,\n        children: inspector.name\n      }, inspector.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Conductors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Conductor Name\",\n      value: newConductorName,\n      onChange: e => setNewConductorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddConductor,\n      children: \"Add Conductor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Conductor ID to update\",\n      value: updateConductorId,\n      onChange: e => setUpdateConductorId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New Conductor Name\",\n      value: updateConductorName,\n      onChange: e => setUpdateConductorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateConductor,\n      children: \"Update Conductor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [conductor.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteConductor(conductor.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, conductor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ConductorsAndInspectors, \"mzSjfQSHlIPb0lVq3zBTyhkUnKs=\");\n_c = ConductorsAndInspectors;\nexport default ConductorsAndInspectors;\nvar _c;\n$RefreshReg$(_c, \"ConductorsAndInspectors\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ConductorsAndInspectors","_s","conductors","setConductors","inspectors","setInspectors","newConductorName","setNewConductorName","updateConductorId","setUpdateConductorId","updateConductorName","setUpdateConductorName","fetch","then","response","json","data","handleAddConductor","newId","length","id","newConductor","name","updatedConductors","method","headers","body","JSON","stringify","handleUpdateConductor","map","conductor","parseInt","handleDeleteConductor","filteredConductors","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","value","inspector","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/ConductorsAndInspectors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ConductorsAndInspectors = () => {\r\n  const [conductors, setConductors] = useState([]);\r\n  const [inspectors, setInspectors] = useState([]);\r\n  const [newConductorName, setNewConductorName] = useState('');\r\n  const [updateConductorId, setUpdateConductorId] = useState('');\r\n  const [updateConductorName, setUpdateConductorName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch Conductors from the backend\r\n    fetch('http://localhost:5000/conductors')\r\n      .then(response => response.json())\r\n      .then(data => setConductors(data));\r\n\r\n    // Fetch Inspectors from the backend\r\n    fetch('http://localhost:5000/inspectors')\r\n      .then(response => response.json())\r\n      .then(data => setInspectors(data));\r\n  }, []);\r\n\r\n  const handleAddConductor = () => {\r\n    const newId = conductors.length ? conductors[conductors.length - 1].id + 1 : 1;\r\n    const newConductor = { id: newId, name: newConductorName };\r\n    const updatedConductors = [...conductors, newConductor];\r\n\r\n    // Update local state and clear input field\r\n    setConductors(updatedConductors);\r\n    setNewConductorName('');\r\n\r\n    // Post new conductor to the backend\r\n    fetch('http://localhost:5000/conductors', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newConductor),\r\n    });\r\n  };\r\n\r\n  const handleUpdateConductor = () => {\r\n    const updatedConductors = conductors.map(conductor => {\r\n      if (conductor.id === parseInt(updateConductorId)) {\r\n        return { ...conductor, name: updateConductorName };\r\n      }\r\n      return conductor;\r\n    });\r\n\r\n    setConductors(updatedConductors);\r\n    setUpdateConductorId('');\r\n    setUpdateConductorName('');\r\n\r\n    // Send updated conductor to the backend\r\n    fetch(`http://localhost:5000/conductors/${updateConductorId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: updateConductorName }),\r\n    });\r\n  };\r\n\r\n  const handleDeleteConductor = (id) => {\r\n    const filteredConductors = conductors.filter(conductor => conductor.id !== id);\r\n    setConductors(filteredConductors);\r\n\r\n    // Send delete request to the backend\r\n    fetch(`http://localhost:5000/conductors/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Assign Conductors and Inspectors</h1>\r\n\r\n      {/* Dropdown for Conductors */}\r\n      <label>Assign Conductor: </label>\r\n      <select>\r\n        {conductors.map(conductor => (\r\n          <option key={conductor.id} value={conductor.name}>\r\n            {conductor.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <br />\r\n\r\n      {/* Dropdown for Inspectors */}\r\n      <label>Assign Inspector: </label>\r\n      <select>\r\n        {inspectors.map(inspector => (\r\n          <option key={inspector.id} value={inspector.name}>\r\n            {inspector.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Form to Add Conductors */}\r\n      <h2>Manage Conductors</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Conductor Name\"\r\n        value={newConductorName}\r\n        onChange={(e) => setNewConductorName(e.target.value)}\r\n      />\r\n      <button onClick={handleAddConductor}>Add Conductor</button>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Conductor ID to update\"\r\n        value={updateConductorId}\r\n        onChange={(e) => setUpdateConductorId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"New Conductor Name\"\r\n        value={updateConductorName}\r\n        onChange={(e) => setUpdateConductorName(e.target.value)}\r\n      />\r\n      <button onClick={handleUpdateConductor}>Update Conductor</button>\r\n\r\n      <ul>\r\n        {conductors.map((conductor) => (\r\n          <li key={conductor.id}>\r\n            {conductor.name}\r\n            <button onClick={() => handleDeleteConductor(conductor.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConductorsAndInspectors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}