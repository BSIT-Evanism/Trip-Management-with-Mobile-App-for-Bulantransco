{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\ConductorsAndInspectors.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConductorsAndInspectors = () => {\n  _s();\n  const [conductors, setConductors] = useState([]);\n  const [inspectors, setInspectors] = useState([]);\n  const handleFetchData = () => {\n    // Fetch conductors\n    fetch('http://localhost:5000/conductors').then(response => response.json()).then(data => setConductors(data)).catch(error => console.error('Error fetching conductors:', error));\n\n    // Fetch inspectors\n    fetch('http://localhost:5000/inspectors').then(response => response.json()).then(data => setInspectors(data)).catch(error => console.error('Error fetching inspectors:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assign Conductors and Inspectors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Assign Conductor and Inspector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Choose Conductor: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Conductor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: conductor.id,\n          children: conductor.name\n        }, conductor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Choose Inspector: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Inspector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), inspectors.map(inspector => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: inspector.id,\n          children: inspector.name\n        }, inspector.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ConductorsAndInspectors, \"XraiqkSvf+tv0ewRBRBm5Ug1raM=\");\n_c = ConductorsAndInspectors;\nexport default ConductorsAndInspectors;\nvar _c;\n$RefreshReg$(_c, \"ConductorsAndInspectors\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConductorsAndInspectors","_s","conductors","setConductors","inspectors","setInspectors","handleFetchData","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","map","conductor","id","name","inspector","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/ConductorsAndInspectors.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ConductorsAndInspectors = () => {\r\n  const [conductors, setConductors] = useState([]);\r\n  const [inspectors, setInspectors] = useState([]);\r\n\r\n  const handleFetchData = () => {\r\n    // Fetch conductors\r\n    fetch('http://localhost:5000/conductors')\r\n      .then(response => response.json())\r\n      .then(data => setConductors(data))\r\n      .catch(error => console.error('Error fetching conductors:', error));\r\n\r\n    // Fetch inspectors\r\n    fetch('http://localhost:5000/inspectors')\r\n      .then(response => response.json())\r\n      .then(data => setInspectors(data))\r\n      .catch(error => console.error('Error fetching inspectors:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Assign Conductors and Inspectors</h1>\r\n      {/* Button to trigger data fetch */}\r\n      <button onClick={handleFetchData}>Assign Conductor and Inspector</button>\r\n\r\n      {/* Dropdown for Conductors */}\r\n      <div>\r\n        <label>Choose Conductor: </label>\r\n        <select>\r\n          <option value=\"\">Select Conductor</option>\r\n          {conductors.map(conductor => (\r\n            <option key={conductor.id} value={conductor.id}>\r\n              {conductor.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Dropdown for Inspectors */}\r\n      <div>\r\n        <label>Choose Inspector: </label>\r\n        <select>\r\n          <option value=\"\">Select Inspector</option>\r\n          {inspectors.map(inspector => (\r\n            <option key={inspector.id} value={inspector.id}>\r\n              {inspector.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConductorsAndInspectors;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIR,aAAa,CAACQ,IAAI,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;;IAErE;IACAN,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,aAAa,CAACM,IAAI,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzCpB,OAAA;MAAQqB,OAAO,EAAEd,eAAgB;MAAAS,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGzEpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAO;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCpB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAQsB,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzCjB,UAAU,CAACoB,GAAG,CAACC,SAAS,iBACvBxB,OAAA;UAA2BsB,KAAK,EAAEE,SAAS,CAACC,EAAG;UAAAT,QAAA,EAC5CQ,SAAS,CAACE;QAAI,GADJF,SAAS,CAACC,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAO;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCpB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAQsB,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzCf,UAAU,CAACkB,GAAG,CAACI,SAAS,iBACvB3B,OAAA;UAA2BsB,KAAK,EAAEK,SAAS,CAACF,EAAG;UAAAT,QAAA,EAC5CW,SAAS,CAACD;QAAI,GADJC,SAAS,CAACF,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnDID,uBAAuB;AAAA2B,EAAA,GAAvB3B,uBAAuB;AAqD7B,eAAeA,uBAAuB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}