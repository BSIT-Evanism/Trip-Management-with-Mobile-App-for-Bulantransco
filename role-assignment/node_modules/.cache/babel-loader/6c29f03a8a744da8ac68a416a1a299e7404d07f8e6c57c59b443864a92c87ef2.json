{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\ConductorsAndInspectors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conductors = () => {\n  _s();\n  const [conductors, setConductors] = useState([]);\n  const [newConductor, setNewConductor] = useState('');\n  const [updateConductor, setUpdateConductor] = useState('');\n  const [conductorIdToUpdate, setConductorIdToUpdate] = useState('');\n  const [conductorIdToDelete, setConductorIdToDelete] = useState('');\n\n  // Initialize Conductors from LocalStorage (Simulating GET)\n  useEffect(() => {\n    const savedConductors = JSON.parse(localStorage.getItem('conductors')) || [{\n      id: 1,\n      name: 'Conductor A'\n    }, {\n      id: 2,\n      name: 'Conductor B'\n    }];\n    setConductors(savedConductors);\n  }, []);\n\n  // Update LocalStorage whenever conductors change\n  useEffect(() => {\n    localStorage.setItem('conductors', JSON.stringify(conductors));\n  }, [conductors]);\n\n  // Add a New Conductor (Simulating POST)\n  const handleAddConductor = () => {\n    const newId = conductors.length > 0 ? conductors[conductors.length - 1].id + 1 : 1;\n    const newConductorObj = {\n      id: newId,\n      name: newConductor\n    };\n    setConductors([...conductors, newConductorObj]);\n    setNewConductor(''); // Clear input field\n  };\n\n  // Update an Existing Conductor (Simulating PUT)\n  const handleUpdateConductor = () => {\n    const updatedConductors = conductors.map(conductor => conductor.id === parseInt(conductorIdToUpdate) ? {\n      ...conductor,\n      name: updateConductor\n    } : conductor);\n    setConductors(updatedConductors);\n    setUpdateConductor(''); // Clear input field\n    setConductorIdToUpdate(''); // Clear input field\n  };\n\n  // Delete a Conductor (Simulating DELETE)\n  const handleDeleteConductor = () => {\n    const filteredConductors = conductors.filter(conductor => conductor.id !== parseInt(conductorIdToDelete));\n    setConductors(filteredConductors);\n    setConductorIdToDelete(''); // Clear input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conductors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: conductor.name\n      }, conductor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Conductor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newConductor,\n        onChange: e => setNewConductor(e.target.value),\n        placeholder: \"Enter conductor name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddConductor,\n        children: \"Add Conductor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Conductor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: conductorIdToUpdate,\n        onChange: e => setConductorIdToUpdate(e.target.value),\n        placeholder: \"Enter conductor ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updateConductor,\n        onChange: e => setUpdateConductor(e.target.value),\n        placeholder: \"Enter new conductor name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateConductor,\n        children: \"Update Conductor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Delete Conductor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: conductorIdToDelete,\n        onChange: e => setConductorIdToDelete(e.target.value),\n        placeholder: \"Enter conductor ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteConductor,\n        children: \"Delete Conductor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Conductors, \"1eygprhWT5J1qcHHngLwNJYHe6c=\");\n_c = Conductors;\nexport default Conductors;\nvar _c;\n$RefreshReg$(_c, \"Conductors\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Conductors","_s","conductors","setConductors","newConductor","setNewConductor","updateConductor","setUpdateConductor","conductorIdToUpdate","setConductorIdToUpdate","conductorIdToDelete","setConductorIdToDelete","savedConductors","JSON","parse","localStorage","getItem","id","name","setItem","stringify","handleAddConductor","newId","length","newConductorObj","handleUpdateConductor","updatedConductors","map","conductor","parseInt","handleDeleteConductor","filteredConductors","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/ConductorsAndInspectors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Conductors = () => {\r\n  const [conductors, setConductors] = useState([]);\r\n  const [newConductor, setNewConductor] = useState('');\r\n  const [updateConductor, setUpdateConductor] = useState('');\r\n  const [conductorIdToUpdate, setConductorIdToUpdate] = useState('');\r\n  const [conductorIdToDelete, setConductorIdToDelete] = useState('');\r\n\r\n  // Initialize Conductors from LocalStorage (Simulating GET)\r\n  useEffect(() => {\r\n    const savedConductors = JSON.parse(localStorage.getItem('conductors')) || [\r\n      { id: 1, name: 'Conductor A' },\r\n      { id: 2, name: 'Conductor B' },\r\n    ];\r\n    setConductors(savedConductors);\r\n  }, []);\r\n\r\n  // Update LocalStorage whenever conductors change\r\n  useEffect(() => {\r\n    localStorage.setItem('conductors', JSON.stringify(conductors));\r\n  }, [conductors]);\r\n\r\n  // Add a New Conductor (Simulating POST)\r\n  const handleAddConductor = () => {\r\n    const newId = conductors.length > 0 ? conductors[conductors.length - 1].id + 1 : 1;\r\n    const newConductorObj = { id: newId, name: newConductor };\r\n    setConductors([...conductors, newConductorObj]);\r\n    setNewConductor(''); // Clear input field\r\n  };\r\n\r\n  // Update an Existing Conductor (Simulating PUT)\r\n  const handleUpdateConductor = () => {\r\n    const updatedConductors = conductors.map((conductor) =>\r\n      conductor.id === parseInt(conductorIdToUpdate)\r\n        ? { ...conductor, name: updateConductor }\r\n        : conductor\r\n    );\r\n    setConductors(updatedConductors);\r\n    setUpdateConductor(''); // Clear input field\r\n    setConductorIdToUpdate(''); // Clear input field\r\n  };\r\n\r\n  // Delete a Conductor (Simulating DELETE)\r\n  const handleDeleteConductor = () => {\r\n    const filteredConductors = conductors.filter((conductor) => conductor.id !== parseInt(conductorIdToDelete));\r\n    setConductors(filteredConductors);\r\n    setConductorIdToDelete(''); // Clear input field\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Conductors</h1>\r\n      <ul>\r\n        {conductors.map((conductor) => (\r\n          <li key={conductor.id}>{conductor.name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <div>\r\n        <h3>Add New Conductor</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newConductor}\r\n          onChange={(e) => setNewConductor(e.target.value)}\r\n          placeholder=\"Enter conductor name\"\r\n        />\r\n        <button onClick={handleAddConductor}>Add Conductor</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Update Conductor</h3>\r\n        <input\r\n          type=\"number\"\r\n          value={conductorIdToUpdate}\r\n          onChange={(e) => setConductorIdToUpdate(e.target.value)}\r\n          placeholder=\"Enter conductor ID\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={updateConductor}\r\n          onChange={(e) => setUpdateConductor(e.target.value)}\r\n          placeholder=\"Enter new conductor name\"\r\n        />\r\n        <button onClick={handleUpdateConductor}>Update Conductor</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Delete Conductor</h3>\r\n        <input\r\n          type=\"number\"\r\n          value={conductorIdToDelete}\r\n          onChange={(e) => setConductorIdToDelete(e.target.value)}\r\n          placeholder=\"Enter conductor ID\"\r\n        />\r\n        <button onClick={handleDeleteConductor}>Delete Conductor</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conductors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}