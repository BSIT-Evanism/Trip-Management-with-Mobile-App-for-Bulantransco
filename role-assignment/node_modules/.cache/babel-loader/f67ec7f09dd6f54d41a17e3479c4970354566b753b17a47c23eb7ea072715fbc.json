{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akagi Asuzagawa\\\\role-assignment\\\\src\\\\ConductorsAndInspectors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignRoles = () => {\n  _s();\n  const [conductors, setConductors] = useState([]);\n  const [inspectors, setInspectors] = useState([]);\n  useEffect(() => {\n    // Check and set default data in localStorage if it's not already there\n    if (!localStorage.getItem('conductors')) {\n      const defaultConductors = [{\n        id: 1,\n        name: 'Conductor A'\n      }, {\n        id: 2,\n        name: 'Conductor B'\n      }];\n      localStorage.setItem('conductors', JSON.stringify(defaultConductors));\n    }\n    if (!localStorage.getItem('inspectors')) {\n      const defaultInspectors = [{\n        id: 1,\n        name: 'Inspector X'\n      }, {\n        id: 2,\n        name: 'Inspector Y'\n      }];\n      localStorage.setItem('inspectors', JSON.stringify(defaultInspectors));\n    }\n\n    // Fetch data from localStorage\n    setConductors(JSON.parse(localStorage.getItem('conductors')));\n    setInspectors(JSON.parse(localStorage.getItem('inspectors')));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assign Conductor and Inspector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Conductor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: conductors.map(conductor => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: conductor.name,\n          children: conductor.name\n        }, conductor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Inspector:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: inspectors.map(inspector => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: inspector.name,\n          children: inspector.name\n        }, inspector.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignRoles, \"pjCvcgoB/P3yBaV6YCxSrLHTyMo=\");\n_c = AssignRoles;\nexport default AssignRoles;\nvar _c;\n$RefreshReg$(_c, \"AssignRoles\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AssignRoles","_s","conductors","setConductors","inspectors","setInspectors","localStorage","getItem","defaultConductors","id","name","setItem","JSON","stringify","defaultInspectors","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conductor","value","inspector","_c","$RefreshReg$"],"sources":["C:/Users/Akagi Asuzagawa/role-assignment/src/ConductorsAndInspectors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AssignRoles = () => {\r\n  const [conductors, setConductors] = useState([]);\r\n  const [inspectors, setInspectors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Check and set default data in localStorage if it's not already there\r\n    if (!localStorage.getItem('conductors')) {\r\n      const defaultConductors = [\r\n        { id: 1, name: 'Conductor A' },\r\n        { id: 2, name: 'Conductor B' }\r\n      ];\r\n      localStorage.setItem('conductors', JSON.stringify(defaultConductors));\r\n    }\r\n\r\n    if (!localStorage.getItem('inspectors')) {\r\n      const defaultInspectors = [\r\n        { id: 1, name: 'Inspector X' },\r\n        { id: 2, name: 'Inspector Y' }\r\n      ];\r\n      localStorage.setItem('inspectors', JSON.stringify(defaultInspectors));\r\n    }\r\n\r\n    // Fetch data from localStorage\r\n    setConductors(JSON.parse(localStorage.getItem('conductors')));\r\n    setInspectors(JSON.parse(localStorage.getItem('inspectors')));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Assign Conductor and Inspector</h1>\r\n      <div>\r\n        <label>Conductor:</label>\r\n        <select>\r\n          {conductors.map(conductor => (\r\n            <option key={conductor.id} value={conductor.name}>\r\n              {conductor.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>Inspector:</label>\r\n        <select>\r\n          {inspectors.map(inspector => (\r\n            <option key={inspector.id} value={inspector.name}>\r\n              {inspector.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignRoles;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}